%! 
/!linewidth 1 def
/!line 780 def
/!blank 0 def
/!printit /widthshow def
/!nor /Times-Roman def
/!it /Times-Italic def
/!bld /Times-Bold def
/!bi /Times-BoldItalic def
/!make {/!altrestore !nor def !nor findfont !fs scalefont setfont} def
/!normal {!printit cvx exec /!altrestore !nor def !nor findfont !fs scalefont setfont !blank 0 32} def
/!italics {!printit cvx exec /!altrestore !it def !it findfont !fs scalefont setfont !blank 0 32} def
/!bold {!printit cvx exec /!altrestore !bld def !bld findfont !fs scalefont setfont !blank 0 32} def
/!bolditalics {!printit cvx exec /!altrestore !bi def !bi findfont !fs scalefont setfont !blank 0 32} def
/!underline {!printit cvx exec currentpoint 2 sub !printit /widthshow ne {3 -1 roll} if !blank 0 32} def
/!stopunder {!printit cvx exec !printit /widthshow eq {currentpoint 2 sub 4 2 roll moveto lineto 0.5 setlinewidth currentpoint 2 add stroke !linewidth setlinewidth moveto} {3 1 roll pop pop} ifelse !blank 0 32} def
/!alt {!printit cvx exec /Symbol findfont !fs scalefont setfont !blank 0 32} def
/!altnormal {!printit cvx exec !altrestore findfont !fs scalefont setfont !blank 0 32} def
/!Times {/!fs exch def /!nor /Times-Roman def /!it /Times-Italic def /!bld /Times-Bold def /!bi /Times-BoldItalic def !make} def
/!Helvetica {/!fs exch def /!nor /Helvetica def /!it /Helvetica-Oblique def /!bld /Helvetica-Bold def /!bi /Helvetica-BoldOblique def !make} def
/!Palatino {/!fs exch def /!nor /Palatino-Roman def /!it /Palatino-Italic def /!bld /Palatino-Bold def /!bi /Palatino-BoldItalic def !make} def
/!Schoolbook {/!fs exch def /!nor /NewCenturySchlbk-Roman def /!it /NewCenturySchlbk-Italic def /!bld /NewCenturySchlbk-Bold def /!bi /NewCenturySchlbk-BoldItalic def !make} def
/!Gothic {/!fs exch def /!nor /AvantGarde-Book def /!it /AvantGarde-BookOblique def /!bld /AvantGarde-Demi def /!bi /AvantGarde-DemiOblique def !make} def
/!Zapf {/!fs exch def /!nor /ZapfChancery-MediumItalic def /!bld /ZapfDingbats def !make} def
/!Courier {/!fs exch def /!nor /Courier def /!it /Courier-Oblique def /!bld /Courier-Bold def /!bi /Courier-BoldOblique def !make} def
/!Symbol {/!fs exch def /!nor /Symbol def !make} def
/!startss {3 div 5 1 roll widthshow currentpoint 3 -1 roll 0 exch rmoveto !blank 0 32} def
/!endss {3 div 6 2 roll widthshow exch 1 eq {0 exch rmoveto pop pop} {pop moveto} ifelse !blank 0 32} def
/!crnolf {!line moveto 0 0 0} def
/!downonehalf {2 idiv !line exch sub /!line exch def} def
/!downss {!line exch sub /!line exch def} def
/!tab {!printit /widthshow eq {5 1 roll show pop pop pop !line moveto !blank 0 32} {clear 0 0 0 0} ifelse} def
/!backup {!printit /widthshow eq {5 1 roll widthshow !fs mul 11 div 0 rmoveto} {6 1 roll stringwidth pop 6 1 roll pop pop pop exch !fs mul 11 div add add} ifelse !blank 0 32} def
/!measure (stringwidth pop 5 1 roll pop pop pop add) def
/!endpage {1 eq {showpage} if /!line 780 def} def
/!endfile {statusdict /manualfeed false put} def
/!single_feed {statusdict /manualfeed true put} def
11 !Times /!line !line 12 sub def
/!line !line 12 sub def
/!line !line 12 sub def
/!line !line 36 sub def
14 !Palatino /!printit !measure def 0 84 !line moveto 0 0 0 (Installation instructions for the Crynwr Packet Driver Collection) !measure cvx exec 468 exch sub 2 div 0 rmoveto /!printit /widthshow def 0 0 0 (Installation instructions for the Crynwr Packet Driver Collection) widthshow /!blank 0 def
/!line !line 16 sub def
10 !Palatino 84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Document conventions) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (All numbers in this document are given in C-style representation.  Decimal is expressed as 11,) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (hexadecimal is expressed as 0x0B, octal is expressed as 013.  All reference to network hardware addresses) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (\(source, destination and multicast\) and demultiplexing information for the packet headers assumes they) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (are represented as they would be in a MAC-level packet header being passed to the send_pkt\(\) function.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Using the packet drivers) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The packet driver must be installed prior to use.  Since each packet driver takes only a few) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (thousand bytes, this is best done in your autoexec.bat.  Since the Ethernet boards typically have jumpers) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (on board, the packet driver must be informed of the values of these jumpers \(auto-configure is possible,) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (but can disturb other boards\).  The first parameter is the entry point used to communicate with the packet) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (driver.  And again, because each board is different, the rest of the parameters will be different.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (All parameters must be specified in C-style representation.  The same number is expressed in decimal as) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (11, hexadecimal is expressed as 0x0B, octal is expressed as 013. Any numbers that the packet driver prints) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (will be in the same notation.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Before installing the packet driver, you must choose an entry point \(software interrupt\) number in the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (range between 0x60 and 0x7e inclusive.  Some people have reported trouble with dBase when using) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (interrupts in the low 60's.  These problems go away when they switch to an interrupt in the high 70's \(e.g.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (0x7e\).) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Interrupt 0x67 is unavailable because it's used by the EMS interface interrupt.  Interrupts 0x70 through) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (0x77 are unavailable because the second interrupt controller uses them for IRQ 8 through IRQ 15.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Interrupts 0x7f and 0x80 are unavailable because at least one package, when locating a packet driver, stops) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (searching before 0x7f.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Running a packet driver with no specifications will give a usage message.  The parameters for each packet) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (driver are documented below.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Options) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (-d -- Most drivers can also be used in a PROM boot environment, see PROMBOOT.NOT for how to use -d) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (and -n options for that purpose.  This switch delays the adapter's initialization until the first time the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (packet driver is accessed.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (-n -- NetWare can use two different framing types on Ethernet, "IEEE 802.3" and Ethernet II.  The BYU) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (packet driver shell requires Ethernet II.  However, the Crynwr packet drivers can convert Ethernet II into) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Novell's version of IEEE 802.3 \(and back\) when the -n switch is used.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (-p -- A certain small level of security can be achieved by disabling promiscuous mode with the -p switch.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Do not mistake this for real security, however.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (-w -- A switch used with Windows, obsoleted by the creation of winpkt.  If you think you need the -w) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (switch, or you used to run it, then consider running winpkt instead.  Winpkt actually solves the problem) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (that -w only attempts to solve.  Winpkt \(and -w\) are only needed for non-resident DOS TCP stacks, e.g.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (NCSA Telnet, PC-Gopher, etc.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (-i -- A switch used with client software that expects to find an IEEE 802.3 packet driver.  Many Crynwr) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Ethernet packet drivers implement both IEEE 802.3 \(class 11\) and Ethernet II aka Bluebook \(class 1\)) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (framing.  The packet driver specification only allows a driver to report one class. The default is to report) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Ethernet II.  Using -i switches the reported class to IEEE 802.3.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
/!line !line 6 sub def
11 !Times /!line !line 12 sub def
/!line !line 12 sub def
1 !endpage 12 !Palatino 11 !Times /!line !line 12 sub def
/!line !line 12 sub def
/!line !line 12 sub def
/!line !line 36 sub def
12 !Palatino 84 !line moveto 0 0 0 (3Com 3C501) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: 3C501 [options] packet_int_no [hardware_irq [io_addr]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The 3c501 driver requires two additional parameters -- the hardware interrupt number and the I/O) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (address.  The defaults are 3 and 0x300.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (3Com 3C503) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: 3C503 [options] packet_int_no [int_level\(2-5\) [io_addr [cable_type]]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The 3c503 driver requires up to three additional parameters -- the hardware interrupt number, the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (I/O address, and the cable type.  The 3c503 can be attached to thick or thin Ethernet cables, and the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (selection is made in software.  The cable type is automatically determined at start-up, but may be forced to) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (external transceiver \(AUI/Thickwire\) by specifying zero or internal transceiver) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (\(Thinwire/10BaseT/10Base2\) or one for thin. The defaults are 2, 0x300, and 65535 \(automatic\).  The 3c503) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (can use shared memory, but the driver automatically determines that parameter from the hardware.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (3Com 3c505) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: 3c505 [options] packet_int_no [hardware_irq [io_addr [base_addr]]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The 3c505 driver requires three additional parameters -- the hardware interrupt number, the I/O) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (address, and the memory base address.  The defaults are 2 and 0x300 and 0xd000.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (3Com 3c507) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: 3c507 [options] packet_int_no io_addr) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The 3c507 will determine its parameters by reading the board.  The only time you would need to) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (specify the parameters is when you have multiple 3c507s in the same machine.) widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The 3c507 driver will use three additional parameters -- the hardware interrupt number, the I/O) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (address, and the memory base address.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (3Com 3c509) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
108 !line moveto 0 0 0 (usage: 3c509 [options] packet_int_no [id_port]|[io_port]|[board_num]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The 3c509 will determine its parameters by reading the board.  The only time you would need to) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (specify the parameters is when you have multiple 3c509s in the same machine, or if you have an I/O) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (conflict with the default id_port \(0x110\).) widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The 3c509 driver will use three additional parameters -- the id port, or the I/O port, or the board) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (number.  If the number is between 0 and 0xff, it is the board number.  If between 0x100 and 0x1ff, it is an) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (ID port.  Otherwise it is an I/O port number.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (3Com 3c523) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: 3c523 [options] packet_int_no [hardware_irq [io_addr [base_addr]]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The 3c523 driver requires no additional parameters.  It gets the board's parameters out of the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Microchannel POS registers.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
/!line !line 55 sub def
11 !Times /!line !line 12 sub def
/!line !line 12 sub def
1 !endpage 12 !Palatino 11 !Times /!line !line 12 sub def
/!line !line 12 sub def
/!line !line 12 sub def
/!line !line 36 sub def
12 !Palatino 84 !line moveto 0 0 0 (AQUILA) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: aquila [options] packet_int_no [hardware_irq [io_addr [base_addr]]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The AQUILA driver requires three additional parameters -- the hardware interrupt number, the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (I/O address, and the memory base address.  The defaults are 3 and 0x360 and 0xd000.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (ARCETHER) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: arcether [options] packet_int_no [hardware_irq [io_addr [base_addr]]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The ARCNET driver requires three additional parameters -- the hardware interrupt number, the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (I/O address, and the memory base address.  The defaults are 5 and 0x2e0 and 0xd800.  Note that a packet) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (driver client must specifically support ARCNET.  The only known client is Phil Karn's \(KA9Q\) networking) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (package, NOS.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (ARCNET) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: arcnet [options] packet_int_no [hardware_irq [io_addr [base_addr]]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The ARCNET driver requires three additional parameters -- the hardware interrupt number, the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (I/O address, and the memory base address.  The defaults are 5 and 0x2e0 and 0xd800.  Note that a packet) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (driver client must specifically support ARCNET.  The only known client is Phil Karn's \(KA9Q\) networking) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (package, NOS.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (AT1500) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: at1500 [options] packet_int_no [io_addr]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The Allied Telesis AT1500 packet driver will automatically search for the adapter's I/O address.  If) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (you are using two boards, or the automatic search fails, then you should specify the proper I/O address.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (AT1700) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: at1700 [options] packet_int_no [io_addr]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The Allied Telesis AT1700 packet driver will automatically search for the adapter's I/O address.  If) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (you are using two boards, or the automatic search fails, then you should specify the proper I/O address.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (AT&T) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: at&t [options] packet_int_no [hardware_irq [io_addr [base_addr]]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The AT&T driver requires three additional parameters -- the hardware interrupt number, the I/O) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (address, and the memory base address.  The defaults are 2 and 0x360 and 0xd000.  This driver supports) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (the StarLAN 1, StarLAN 10 NAU, EN100 and StarLAN Fiber NAU.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (AT&T_LP 0x62 2 0x360 0xd000 0 0) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: at&t_lp [options] <packet_int_no> [<hardware_irq> [<io_addr> [<base_addr> [<media_sel>) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 ([<li_enabl>]]]]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The AT&T_LP driver requires five additional parameters -- the hardware interrupt number, the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (I/O address, the memory base address, media select, and link integrity.  The defaults are 2 and 0x360 and) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (0xd000.  This driver supports the ATStarStation, ATStarLAN 10 LanPACER+ NAU, ATStarLAN 10) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (LanPACER NAU and ATMicroelectronics T7231 evaluation board.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
11 !Times /!line !line 12 sub def
/!line !line 12 sub def
1 !endpage /!line !line 12 sub def
/!line !line 12 sub def
/!line !line 12 sub def
/!line !line 36 sub def
10 !Palatino 84 !line moveto 0 0 0 (The final two numbers are new attributes.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (0 0 --> This is for AUI setting) widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (0 1 --> This is also for AUI setting) widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (1 0 --> This is for TP setting, no link integrity) widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (1 1 --> This is for TP setting, link integrity enabled) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (For the LP NAU only, "0 0" and "0 1" are invalid as there is no AUI port on that NIC.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (David Systems Inc \(DSI\)) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: davidsys [options] <packet_int_no> <hardware_irq> <io_addr> <delay_mult>) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (The DSI driver requires three additional parameters, the hardware interrupt number, the I/O port and the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (delay multiplier.  Delay_mult is a system dependent timing loop used for I/O to the card.  A reasonable) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (value is calculated during initialization, but on some fast systems it may need to be somewhat larger.  The) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (multipler is divided by ten, then multiplied by the calculated delay.  The default multiplier is 10 \(actually) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (1.0\).) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (D-Link DE-600) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: de600 [options] packet_int_no) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The D-Link Pocket Lan Adapter packet driver requires no additional parameters.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Digital Equipment Corporation DEPCA) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: depca [options] <packet_int_no> [<hardware_irq> [<io_addr> [<mem_addr>]]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The DEPCA packet driver requires three additional parameters -- the hardware interrupt number,) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (the I/O address, and the memory base address.  The defaults are 5 and 0x300 and 0xd000.  The packet) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (driver will resolve the io_addr automatically if io_addr is set to '?', e.g. depca 0x7e 5 ? 0xd000.  The driver) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (requires that you set the jumpers to enable the boot prom.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Digital Equipment Corporation VAXMATE) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: vaxmate [options] <packet_int_no> [<hardware_irq> [<io_addr> [<mem_addr>]]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The VAXMATE packet driver requires three additional parameters -- the hardware interrupt) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (number, the I/O address, and the memory base address.  The defaults are 2 and 0x300 and 0xd000.  The) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (packet driver will resolve the io_addr automatically if io_addr is set to '?', e.g. depca 0x7e 2 ? 0xd000.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (EtherSLIP) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: ethersl [options] packet_int_no [-h] [hardware_irq]) widthshow /!blank 0 def
/!line !line 11 sub def
132 !line moveto 0 0 0 ([io_addr] [baud_rate] [send_buf_size] [recv_buf_size]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The EtherSLIP driver is a simulated Ethernet adapter.  It appears to the application software to be) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (an Ethernet driver, but it transmits and receives SLIP packets on the serial line.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (The parameters are as follows. The -h flag is included if you wish to use hardware handshaking \(the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (packet driver will then suspend the transmission of characters while CTS is low\).  The hardware_irq is the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (hardware interrupt number, defaults to 4 \(COM1\).  The io_addr is the hardware I/O address, defaults to) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (0x3f8 \(COM1\).  The baud_rate defaults to 4800 baud.  The send_buf_size and recv_buf_size default to 3000) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (each.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
11 !Times /!line !line 12 sub def
/!line !line 12 sub def
1 !endpage 12 !Palatino 11 !Times /!line !line 12 sub def
/!line !line 12 sub def
/!line !line 12 sub def
/!line !line 36 sub def
12 !Palatino 84 !line moveto 0 0 0 (Fujitsu dk86960.com) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: dk86960 [options] packet_int_no [hardware_irq [io_addr]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The dk86960 driver requires two additional parameters -- the hardware interrupt number and the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (I/O address.  The defaults are 3 and 0x300.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Fujitsu dk86965.com) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: dk86965 [options] packet_int_no) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The dk86965 driver requires no additional parameters.  It always searches for the proper I/O) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (address.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (HP Ethertwist) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
108 !line moveto 0 0 0 (usage: hppclan [options] packet_int_no [hardware_irq [io_addr]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The hppclan driver requires two additional parameters -- the hardware interrupt number and the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (I/O address.  The defaults are 3 and 0x300.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (IBM Token Ring) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: ibmtoken [options] packet_int_no [adapter_no]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The IBM Token Ring packet driver requires one additional parameters -- the adapter number.  The) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (default is zero.  See IBMTOKEN.DOC for more information.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (ICL EtherTeam16) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: ETHIIE [options] packet_int_no [int_level [io_addr [cable_type]]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The ETHIIE driver requires three additional parameters -- the hardware interrupt number, the I/O) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (address, and the cable type.  The interrupt levels supported by the adapter are 5, 9 \(2\), 12 and 15.  The) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Ethenet IIe can be attached to thick or thin Ethernet cables, and the selection is made in software. The cable) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (type parameter should be zero for thick, and one for thin.  With the Twisted Pair \(TP\) version of the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (adapter, you must set interface to the value 1 \(thin\).) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (The defaults are 9 \(2\), 0x300 and 1 \(thin\).) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Please note, that the adapter can be used only in a 16-bit slot of your computer.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Intel EtherExpress) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: exp16 [options] <packet_int_no> [<io_addr>]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (The Intel EtherExpress packet driver has one optional parameter.  The <io_addr> is only needed if there is) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (more than one EtherExpress card in your system.  Otherwise, the driver will search for adapter and get its) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (parameters from it.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (BICC Data Networks' ISOLAN 4110 ethernet) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: isolan [options] packet_int_no [hardware_irq [base_addr]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The BICC Isolan requires two additional parameters -- the hardware interrupt number and the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (memory base address.  The defaults are 2 and 0xb800h.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
11 !Times /!line !line 12 sub def
/!line !line 12 sub def
1 !endpage 12 !Palatino 11 !Times /!line !line 12 sub def
/!line !line 12 sub def
/!line !line 12 sub def
/!line !line 36 sub def
12 !Palatino 84 !line moveto 0 0 0 (BICC Data Networks' ISOLAN 4112/3 ethernet) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: isolink [options] packet_int_no [hardware_irq [dma_no [io_addr]]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The BICC Isolan requires three additional parameters -- the hardware interrupt number, the dma) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (channel number and the I/O base address.  The defaults are 10 and 0, and to automatically search.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Kodiak Raven and Kombo) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: kodiak8 [options] packet_int_no [hardware_irq [io_addr]]) widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: kodiak16 [options] packet_int_no [hardware_irq [io_addr]]) widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: kodiakk [options] packet_int_no [hardware_irq [io_addr]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The Kodiak drivers require three additional parameters -- the hardware interrupt number and the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (I/O base address.  The defaults are 2 and 0x300.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (LocalTalk) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: localtlk [options] <packet_int_no> [<IP address>]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The LocalTalk packet driver requires atalk.sys to be installed.  Because it is not an Ethernet class) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (driver, it requires special code in the client.  See LOCALTLK.NOT for more details.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Microdyne EXOS205T) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: exos205 [options] <packet_int_no> [hardware_irq] [io_addr] [base_addr]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (This Packet Driver supports the EXOS205T with 256K or 512K Byte RAM.  It has not been tested with the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (old EXOS205E with 128K Byte.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Where the last three arguments are optional. If you do not supply them, the driver uses '0x02 0x310) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (0xcc00', these are the EXOS defaults.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (The Interrupt must be set by a jumper on the card. The Packet Driver does not check for a valid setting.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Possible values are 2 \(default\), 3, 4, 5, 6, 7, 10, 11, 12, 13 and 14.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Five bytes of i/o address space are used by the EXOS205. A jumper on the EXOS205 board sets the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (starting address. Possible values are 0x300, 0x310 \(default\), 0x320 and 0x330. The Packet Driver fails if it) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (does not find an EXOS205 card at the specified address.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (The EXOS205 uses a shared memory to interface the Intel 82586 Ethernet chip to the host's address space.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (The EXOS205 memory can be 256 K or 512 K large. The Packet Driver uses a 16 K Byte window to access) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (the EXOS205 memory. The location of this window is set by software. The following segments are) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (possible:) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
132 !line moveto 0 0 0 (0xa000 0xc000 0xc400) widthshow /!blank 0 def
/!line !line 11 sub def
132 !line moveto 0 0 0 (0xc800 0xcc00 \(default\) 0xd000) widthshow /!blank 0 def
/!line !line 11 sub def
132 !line moveto 0 0 0 (0xd400 0xd800 0xdc00) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (If you install a BOOT-PROM on the EXOS205 take care that you do not use the same address for the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (PROM and for the shared memory.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (The SQE check jumper is ignored by the EXOS205 Packet Driver.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
/!line !line 44 sub def
11 !Times /!line !line 12 sub def
/!line !line 12 sub def
1 !endpage 12 !Palatino 11 !Times /!line !line 12 sub def
/!line !line 12 sub def
/!line !line 12 sub def
/!line !line 36 sub def
12 !Palatino 84 !line moveto 0 0 0 (Mitel Express) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: express [options] <packet_int_no> [-n] [<driver_class> [<hardware_irq>]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The Mitel Express packet driver has one optional switch, and two optional parameters. The) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (<driver_class> defaults to SLIP, and the <hardware_irq> defaults to 7.  The -n switch instructs card to be) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (an NT.  The <driver_class> should be SLIP or a number.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Multitech EN-301) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: en301 [options] packet_int_no [hardware_irq [io_addr]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The Multitech driver runs the EN-301 cards. The Multitech driver requires two additional) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (parameters, the hardware interrupt number, and the I/O port.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Mylex LNE-390B) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: mylex [options] packet_int_no [int_level [io_addr [mem_base]]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The Mylex driver requires three additional parameters -- the hardware interrupt number, the I/O) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (address, and the memory base address.  The defaults are pulled out of the EISA configuration registers for) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (the first board found.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (NCR ET-105) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: ncret105 [options] <packet_int_no> <hardware_irq> <base_addr> <Ethernet_address>) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The NCR ET-105 driver requires four additional parameters -- the hardware interrupt number, the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (I/O address, the memory base address, and the Ethernet address.  The Ethernet address assigned to any) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (particular board is printed on sticky labels that come with the board.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Netbios) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: nb [options] packet_int_no ip.ad.dr.ess [receive queue size]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The netbios packet driver transports IP packets over NetBIOS.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Novell IPX) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: ipxpkt [options] packet_int_no [-n [no_bytes]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The ipxpkt packet driver simulates Ethernet on Novell IPX protocol.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Novell ne/2) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: ne2 [options] <packet_int_no>) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The ne/2 driver requires no additional parameters.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
/!line !line 55 sub def
11 !Times /!line !line 12 sub def
/!line !line 12 sub def
1 !endpage 12 !Palatino 11 !Times /!line !line 12 sub def
/!line !line 12 sub def
/!line !line 12 sub def
/!line !line 36 sub def
12 !Palatino 84 !line moveto 0 0 0 (Novell ne1000) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: ne1000 [options] packet_int_no [hardware_irq [io_addr]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The ne1000 driver requires two additional parameters -- the hardware interrupt number and the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (I/O address.  The defaults are 3 and 0x300.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Novell ne2000) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: ne2000 [options] packet_int_no [hardware_irq [io_addr]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The ne2000 driver requires two additional parameters -- the hardware interrupt number and the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (I/O address.  The defaults are 2 and 0x300.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Novell ne2100 and ne1500) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: ne2100 [options] packet_int_no [hardware_irq [io_addr [dma_no]]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The ne2100 Ethernet card is software compatible with the ne1500 card. The ne2100 driver requires) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (three additional parameters -- the hardware interrupt number, the I/O address, and the DMA channel) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (number.  The defaults are 3, 0x300, and 5.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Racal-Interlan \(Formerly Interlan\) ES3210) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: es3210 [options] packet_int_no [int_level [io_addr [mem_base]]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The es3210 driver requires three additional parameters -- the hardware interrupt number, the I/O) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (address, and the memory base address.  There are no defaults.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Racal-Interlan \(Formerly Interlan\) NI5010) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: NI5010 [options] packet_int_no [hardware_irq [io_addr]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The NI5010 driver requires two additional parameters -- the hardware interrupt number and the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (I/O address.  The defaults are 3 and 0x300.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Racal-Interlan \(Formerly Micom-Interlan\) NI5210) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: ni5210 [options] packet_int_no [hardware_irq [io_addr [base_addr]]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The NI5210 driver requires three additional parameters -- the hardware interrupt number, the I/O) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (address, and the memory base address.  The defaults are 2 and 0x360 and 0xd000.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Racal-Interlan NI6510) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: ni6510 [options] packet_int_no [hardware_irq [io_addr]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The ni6510 driver has two additional parameters -- the hardware interrupt number and the I/O) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (address.  The defaults are 2 and auto-sense.  These parameters do not need to be set unless the auto-sense) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (routine fails, or otherwise disrupts operation of your PC.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
/!line !line 33 sub def
11 !Times /!line !line 12 sub def
/!line !line 12 sub def
1 !endpage 12 !Palatino 11 !Times /!line !line 12 sub def
/!line !line 12 sub def
/!line !line 12 sub def
/!line !line 36 sub def
12 !Palatino 84 !line moveto 0 0 0 (Racal-Interlan \(Formerly Micom-Interlan\) NI9210) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: ni9210 [options] packet_int_no [hardware_irq [io_addr [base_addr]]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The ni9210 driver requires three additional parameters -- the hardware interrupt number, the I/O) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (address, and the memory base address.  The defaults are 2 and 0x360 and 0xd000.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (NTI 16) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: nti16 [options] packet_int_no [hardware_irq [io_addr [base_addr]]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The nti16 driver requires three additional parameters -- the hardware interrupt number, the I/O) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (address, and the memory base address.  The defaults are 3 and 0x338 and 0xd000.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (SLIP8250) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: SLIP8250 [options] packet_int_no [-h] [driver_class] [hardware_irq]) widthshow /!blank 0 def
/!line !line 11 sub def
132 !line moveto 0 0 0 ([io_addr] [baud_rate] [recv_buf_size]) widthshow /!blank 0 def
/!line !line 11 sub def
132 !line moveto 0 0 0 (The driver_class should be SLIP, KISS, AX.25, or a) widthshow /!blank 0 def
/!line !line 11 sub def
132 !line moveto 0 0 0 (number.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The SLIP8250 driver is not strictly an Ethernet adapter, however some software packages \(such as) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (KA9Q's NET and NCSA Telnet\) support Serial Line IP \(SLIP\).  SLIP must be specially supported because) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (it doesn't use ARP and has no hardware addresses prepended to its packets.  The PDS is not clear on this,) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (but the packet driver does the SLIP encoding.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (The parameters are as follows.  The -h flag is included if you wish to use hardware handshaking \(the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (packet driver will then suspend the transmission of characters while CTS is low\).  The driver_class is the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (class that is returned to a client of the packet driver spec in the driver_info call.  The hardware_irq is the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (hardware interrupt number, defaults to 4 \(COM1\).  The io_addr is the hardware I/O address, defaults to) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (0x3f8 \(COM1\).  The baud_rate defaults to 4800 baud.  The recv_buf_size defaults to 3000.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Thomas-Conrad tcenet) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: tcenet [options] packet_int_no [int_no [io_addr]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The tcenet driver requires two additional parameters -- the hardware interrupt number and the I/O) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (address.  The defaults are 3 and autosense.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Ungermann-Bass NIC-PC) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: ubnicpc [options] <packet_int_no> <hardware_irq> <base_addr>) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (The UB NIC-PC driver requires two additional parameters, the hardware interrupt number, and the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (memory base address.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Ungermann-Bass NIC-PS/2) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: ubnicps2 [options] <packet_int_no> <hardware_irq> <io_addr> <base_addr>) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (The UB NIC-PS/2 requires three additional parameters -- the hardware interrupt number, the I/O) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (address, and the memory base address.  The defaults are the contents of the POS registers, so the only) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (time you would need to use the parameters is if you're using two NIC-PS/2 boards in one machine.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
11 !Times /!line !line 12 sub def
/!line !line 12 sub def
1 !endpage 12 !Palatino 11 !Times /!line !line 12 sub def
/!line !line 12 sub def
/!line !line 12 sub def
/!line !line 36 sub def
12 !Palatino 84 !line moveto 0 0 0 (SMC \(formerly Western Digital\) \(also IBM\) SMC) !underline (WD) !stopunder () widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: smc_wd [options] packet_int_no [-o] [int_level [io_addr [mem_base]]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The SMC_WD driver runs the SMC \(formerly Western Digital\) E, EBT, EB, ET/A, and E/A) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Ethernet cards \(but not the Ultra\), and also on the IBM Microchannel Ethernet cards with POS ID's) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (0xEFE5, 0xEFD4 and 0xEFD5. The ISA SMC_WD requires three additional parameters -- the hardware) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (interrupt number, the I/O address, and the memory base address. The ISA defaults are 3 and 0x280 and) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (0xd000.  The MCA SMC_WD picks up its default parameters from the POS registers, so you only need) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (specify them it you have multiple adapters. The smc_wd cards do not enable their memory until) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (configuration time.  Some 386 memory mappers will map memory into the area that the card intends to) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (use. You should be able to configure your software to leave this area of memory alone.  Also the driver) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (will refuse to map memory into occupied memory.  The occupied memory test fails on some machines, so) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (the optional switch -o allows you to disable the check for occupied memory.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (If you get the error "PROM ADDRESS Invalid", use EZSETUP to set all the parameters again \(to the same) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (values\).  Occasionally wayward programs will write to locations that don't belong to them.  This can) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (corrupt the EEPROM checksum on the card.  EZSETUP will restore the correct checksum.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Tiara Lancard) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: tiara [options] packet_int_no [hardware_irq [io_addr]]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The Tiara driver runs the Tiara LANCARD/E cards, both eight and sixteen bit cards.  The Tiara) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (driver requires two additional parameters, the hardware interrupt number, and the I/O port.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (Zenith Data Systems Z-Note) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: znote [options] packet_int_no) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The Z-Note packet driver also works on the IBM Thinkpad 300.  The Z-Note packet driver has no) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (parameters beyond the packet driver software interrupt number.  It picks up its parameters from the bios.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (This driver also turns the hardware on when it starts, and off when it exits, so you do not need to enable) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (the adapter.  In fact, you should leave it disabled, so that you save the power when the driver is not) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (installed.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Errorlevels) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (Some of the packet drivers return error codes.  Some of these error codes indicate fatal errors, and) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (some are merely warnings.  For the moment, you must consult the source to see what the errorcodes) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (mean.  For example, pktchk returns 0 if a packet driver exists at a given address, and 1 if not.  You might) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (use it in a batch file that only installs a packet driver if one is not found.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
132 !line moveto 0 0 0 (rem only install the packet driver if there isn't one) widthshow /!blank 0 def
/!line !line 11 sub def
132 !line moveto 0 0 0 (rem already.) widthshow /!blank 0 def
/!line !line 11 sub def
132 !line moveto 0 0 0 (pktchk 0x7e) widthshow /!blank 0 def
/!line !line 11 sub def
132 !line moveto 0 0 0 (if errorlevel 0 goto gotit) widthshow /!blank 0 def
/!line !line 11 sub def
132 !line moveto 0 0 0 (ni5210 0x7e) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (:gotit) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The "errorlevel" test is true if the errorlevel is less than or equal to the parameter.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Utility Programs) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (There are also several utility programs for packet drivers:) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
11 !Times /!line !line 12 sub def
/!line !line 12 sub def
1 !endpage 12 !Palatino 11 !Times /!line !line 12 sub def
/!line !line 12 sub def
/!line !line 12 sub def
/!line !line 36 sub def
12 !Palatino 84 !line moveto 0 0 0 (PKTADDR) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: pktaddr packet_int_no [ethernet_addr]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (If the second argument is given, the Ethernet address of the given packet driver is set.  The Ethernet) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (address is printed out.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (PKTALL) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: pktall packet_int_no [-v] [-p] [-a et:he:rn:et:ad:dr]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (All packets are received and discarded from the given packet) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (driver.  This program is of most use with PKTMODE and TRACE.  The -v) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (switch causes the packet contents to be printed.  The -p switch) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (causes the driver to enter promiscuous mode \(receives all packets) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (regardless of destination address\).  The -a switch lets you filter) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (out all but a specific address.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (PKTCHK) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: pktchk packet_int_no [packet_int_no]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (Test for existance of a packet driver.  Returns with errorlevel 0 if the specified interrupt has a) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (packet driver.  If the second argument is given, all interrupts in the range are checked for a packet driver.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (If no packet driver is found at all, errorlevel 1 is returned.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (PKTMODE) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: pktmode packet_int_no [receive_mode]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (If the second argument is given, the receive mode of the given packet driver is set.  A decimal) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (number from the list of modes should be used.  All the possible modes are printed out.  Unimplemented) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (modes are marked with "xx", and the current mode is marked with "->".) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (PKTMULTI) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: pktmulti packet_int_no [-f filename | address ...]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The specified addresses are set as allowed multicast addresses.  If no list of addresses is given, then) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (the current list of addresses is printed.  The addresses may either be specified on the command line, or in) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (a file using) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (the -f option.  When a file is used, any whitespace in the file is ignored.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (PKTSTAT) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: pktstat first_int_no [last_int_no]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The statistics for all packet drivers in the given range are printed.  The default range is 0x60) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (through 0x80.  The meanings of the columns are given below.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
132 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (pkt_in ) 132 !tab (is the number of packets ever received by this driver.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (pkt_out ) 132 !tab (is the number of packets ever transmitted by this driver.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (byt_in ) 132 !tab (is the number of bytes ever received by this driver.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (byt_out ) 132 !tab (is the number of bytes ever transmitted by this driver.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (pk_drop ) 132 !tab (Packets dropped because there was no handler for that Ethernet packet type.) widthshow /!blank 0 def
/!line !line 11 sub def
11 !Times /!line !line 12 sub def
/!line !line 12 sub def
1 !endpage /!line !line 12 sub def
/!line !line 12 sub def
/!line !line 12 sub def
/!line !line 36 sub def
10 !Palatino 84 !line moveto 0 0 0 (err_in ) 132 !tab (Dependent upon the packet driver.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (err_out ) 132 !tab (Dependent upon the packet driver.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (PKTSEND) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: pktsend packet_int_no [-r] [-d delay] [-f filename | packet]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The specified packet is sent using the specified packet driver.  The -r option says to repeat sending) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (as fast as possible.  You shouldn't use this option very often.  The -d option inserts a system-dependent) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (delay between sending packets.  Without -r, the program waits for a key before sending a packet.  The) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (packet may either be specified on the command line, or in a file using the -f option.  When a file is used,) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (any whitespace in the file is ignored.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (PKTTRAF) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: pkttraf packet_int_no) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (Graphically display traffic on an EGA or VGA screen.  The first twenty Ethernet addresses) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (encountered are assigned a node number. The traffic between each pair of nodes is displayed as a line of) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (varying intensity.  When any line reaches maximum intensity, the intensities of all lines are halved.) widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (A cursor highlights one of the nodes.  The Ethernet address of the highlighted node is printed in) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (the lower-right corner.  The cursor is moved using space and backspace.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (PKTWATCH) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: pktwatch packet_int_no [-a et:he:rn:et:ad:dr]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (Pktwatch runs the driver in promiscuous mode, and prints all packets recieved on the screen.  The) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (-a switch lets you filter out all but a specific address.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (TERMIN) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: termin [-s] packet_int_no) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The specified packet driver is terminated, and its memory recovered.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (The s-option \(stop\) is used to prepare for termination. The in-use flag for all handles are cleared.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (This prevents upcalls to handlers that are to be removed and also makes it possible to later terminate the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (packet driver even though handles are not released.  Actually, doing termin -s after prom boot is like) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (cutting the branch you are sitting on.  Recipe for removing packet driver, IPX and NET:) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
276 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () 132 !tab (pktdrvr 0x7c ....) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () 132 !tab (MARKNET C:\\IPX.MRK) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () 132 !tab (PDIPX) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () 132 !tab (NET3) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () 132 !tab (. . .) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () 132 !tab (NET3 u ) 264 !tab (; unload netx to avoid communication timeout) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () 132 !tab (TERMIN -s 0x7c ) 264 !tab (; pkt drvr no longer calls any nonexistent rcvrs) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () 132 !tab (RELNET C:\\IPX.MRK ) 264 !tab (; IPX is "removed") widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () 132 !tab (TERMIN 0x7c ) 264 !tab (; It is now safe to terminate the packet driver) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
/!line !line 55 sub def
11 !Times /!line !line 12 sub def
/!line !line 12 sub def
1 !endpage 12 !Palatino 11 !Times /!line !line 12 sub def
/!line !line 12 sub def
/!line !line 12 sub def
/!line !line 36 sub def
12 !Palatino 84 !line moveto 0 0 0 (TRACE) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: trace packet_int_no [buffer_size]) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (Trace is very useful for debugging packet driver troubles.  Trace lets you trace all transactions) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (between a user program and the packet driver.  The transactions are stored in a memory buffer whose size) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (is set with buffer_size.  The default size is 10,000 bytes.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (When you run trace, it sets itself up and then spawns COMMAND.COM so that you can run a) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (network program that uses the packet driver.  After you quit your network session, you issue an "EXIT") widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (command.  This returns you to trace, which writes the transaction log to "TRACE.OUT".  The following) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (program, DUMP, interprets TRACE.OUT.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (DUMP) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: dump) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (Interprets the contents of TRACE.OUT as written by TRACE.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
12 !Palatino 84 !line moveto 0 0 0 (WINPKT) widthshow /!blank 0 def
10 !Palatino /!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
114 !line moveto 0 0 0 (usage: winpkt <packet_int_no>) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Provides a Packet Driver interface between Windows 3 Enhanced mode applications and a real Packet) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Driver.  This attempts to solve the problem of Windows moving DOS applications around in memory) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (willy nilly.  It replaces the -w flag hack.  Winpkt \(and -w\) are only needed for non-resident DOS TCP) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (stacks, e.g. NCSA Telnet, PC-Gopher, etc.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Previous versions of winpkt had two parameters and required that you use different interrupts for the) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (virtual packet driver and the real packet driver.  This caused confusion when the software used the wrong) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (packet driver.  This version requires that you use the same packet_int_no as the existing packet driver.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Install WINPKT after the Packet Driver and before starting Windows.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
/!line !line 242 sub def
11 !Times /!line !line 12 sub def
/!line !line 12 sub def
1 !endpage 14 !Palatino 11 !Times /!line !line 12 sub def
/!line !line 12 sub def
/!line !line 12 sub def
/!line !line 36 sub def
14 !Palatino /!printit !measure def 0 84 !line moveto 0 0 0 (Appendix A) !measure cvx exec 468 exch sub 2 div 0 rmoveto /!printit /widthshow def 0 0 0 (Appendix A) widthshow /!blank 0 def
/!line !line 15 sub def
10 !Palatino 84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (Interrupt usage in the range 0x60 through 0x80, from Ralf Brown's interrupt list.) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
138 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
138 !line moveto 0 0 0 () widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (60 -- -- reserved for user interrupt ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (60 -- -- FTP Driver - PC/TCP Packet Driver Specification ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (60 01 FF FTP Driver - DRIVER INFO ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (60 02 -- FTP Driver - ACCESS TYPE ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (60 03 -- FTP Driver - RELEASE TYPE ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (60 04 -- FTP Driver - SEND PACKET ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (60 05 -- FTP Driver - TERMINATE DRIVER FOR HANDLE ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (60 06 -- FTP Driver - GET ADDRESS ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (60 07 -- FTP Driver - RESET INTERFACE ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (60 11 -- 10-NET - LOCK AND WAIT ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (60 12 -- 10-NET - LOCK ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (60 13 -- 10-NET - UNLOCK ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (60 20 -- FTP Driver - SET RECEIVE MODE ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (60 21 -- FTP Driver - GET RECEIVE MODE ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (60 24 -- FTP Driver - GET STATISTICS ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (61 -- -- reserved for user interrupt ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (62 -- -- reserved for user interrupt ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (63 -- -- reserved for user interrupt ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (64 -- -- reserved for user interrupt ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (65 -- -- reserved for user interrupt ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (66 -- -- reserved for user interrupt ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (67 -- -- LIM EMS ) widthshow /!blank 0 def
/!line !line 11 sub def
138 !line moveto 0 0 0 (...  ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (67 DE 00 Virtual Control Program Interface - INSTALLATION CHECK ) widthshow /!blank 0 def
/!line !line 11 sub def
138 !line moveto 0 0 0 (...  ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (68 01 -- APPC/PC ) widthshow /!blank 0 def
/!line !line 11 sub def
138 !line moveto 0 0 0 (...  ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (69 -- -- unused ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (6A -- -- unused ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (6B -- -- unused ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (6C -- -- system resume vector \(CONVERTIBLE\) ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (6C -- -- DOS 3.2 Realtime Clock update ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (6D -- -- VGA - internal ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (6E -- -- unused ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (6F -- -- Novell NetWare - PCOX API \(3270 PC terminal interface\) ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (6F 00 -- 10-NET - LOGIN ) widthshow /!blank 0 def
/!line !line 11 sub def
138 !line moveto 0 0 0 (...  ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (70 -- -- IRQ8 - AT/XT286/PS50+ - REAL-TIME CLOCK ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (71 -- -- IRQ9 - AT/XT286/PS50+ - LAN ADAPTER 1 ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (72 -- -- IRQ10 - AT/XT286/PS50+ - RESERVED ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (73 -- -- IRQ11 - AT/XT286/PS50+ - RESERVED ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (74 -- -- IRQ12 - PS50+ - MOUSE INTERRUPT ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (75 -- -- IRQ13 - AT/XT286/PS50+ - 80287 ERROR ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (76 -- -- IRQ14 - AT/XT286/PS50+ - FIXED DISK ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (77 -- -- IRQ15 - AT/XT286/PS50+ - RESERVED ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (78 -- -- not used ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (79 -- -- not used ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (7A -- -- Novell NetWare - LOW-LEVEL API ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (7A -- -- AutoCAD Device Interface ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (7B -- -- not used ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (7C -- -- not used ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (7D -- -- not used ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (7E -- -- not used ) widthshow /!blank 0 def
/!line !line 11 sub def
/!line !line 7 sub def
11 !Times /!line !line 12 sub def
/!line !line 12 sub def
1 !endpage /!line !line 12 sub def
/!line !line 12 sub def
/!line !line 12 sub def
/!line !line 36 sub def
10 !Palatino 84 !line moveto 0 0 0 (7F -- -- HDILOAD.EXE - 8514/A VIDEO CONTROLLER INTERFACE ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (7F -- -- HLLAPI \(High-Level Language API\) ) widthshow /!blank 0 def
/!line !line 11 sub def
84 !line moveto 0 0 0 (80 -- -- reserved for BASIC) widthshow /!blank 0 def
/!line !line 11 sub def
/!line !line 627 sub def
11 !Times /!line !line 12 sub def
/!line !line 12 sub def
1 !endpage !endfile 